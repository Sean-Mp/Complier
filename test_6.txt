glob { 
  unused
} 

proc { 
  doublex (n result) {
    local {}
    result = ( n mult 2 )
  }
  
  addtwo (a b result) {
    local {}
    result = ( a plus b )
  }
  
  complexcalc (x y z) {
    local { temp1 temp2 }
    temp1 = ( x mult 2 ) ;
    temp2 = ( y mult 3 ) ;
    z = ( ( temp1 plus temp2 ) plus 10 )
  }
  
  nested (x result) {
    local { temp }
    temp = ( x mult 2 ) ;
    result = ( temp plus x )
  }
} 

func {
  compute (a b) {
    local { doubled sum }
    doubled = ( a mult 2 ) ;
    sum = ( doubled plus b ) ;
    return sum
  }
} 

main { 
  var { result1 result2 result3 result4 result5 }
  
  print "PROCEDURE TESTS" ;
  
  print "Test doublex" ;
  doublex ( 5 result1 ) ;
  print result1 ;
  
  print "Test addtwo" ;
  addtwo ( 7 8 result2 ) ;
  print result2 ;
  
  print "Test complex" ;
  complexcalc ( 2 3 result3 ) ;
  print result3 ;
  
  print "Test nested" ;
  nested ( 6 result4 ) ;
  print result4 ;
  
  print "FUNCTION TEST" ;
  result5 = compute ( 4 5 ) ;
  print result5 ;
  
  print "DONE" ;
  halt
}